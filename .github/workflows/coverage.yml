name: Coverage and PyLint Workflow

on:
  push:


jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Run tests and coverage
        run: |
          source .venv/bin/activate
          poetry run coverage run -m unittest discover tests -p "tests_functions.py"
          poetry run coverage report
          poetry run coverage html
        continue-on-error: true

      - name: Upload coverage report to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: htmlcov

      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@v2

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v16
        id: verify-changed-files
        with:
          files: coverage.svg

      - name: Commit files
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add coverage.svg
          git commit -m "Updated coverage.svg"
        env:
          GITHUB_TOKEN: ${{ secrets.EZPRIT }}

      
      - name: Run PyLint
        run: poetry run pylint tests cs_poetry || true

      - name: Badge Pylint
        uses: Silleellie/pylint-github-action@v1
        with:
          package-path: |
            cs_poetry
            tests
          python-version: 3.11
          requirements-path: requirements/requirements.txt

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: git push
